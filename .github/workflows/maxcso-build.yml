name: maxcso Build

on:
  workflow_dispatch:
    inputs:
      maxcso_ref:
        description: 'maxcso GitHub branch, tag, or SHA (e.g. "v1.13.0")'
        required: true
        type: string
      auto-merge:
        description: 'Auto-merge pull request?'
        required: true
        type: boolean
        default: true
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    name: build-linux ${{ matrix.docker_arch }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker_image: i386/ubuntu:latest
            docker_arch: linux/386
            nodejs_arch: ia32
          - docker_image: ubuntu:latest
            docker_arch: linux/amd64
            nodejs_arch: amd64
          - docker_image: ubuntu:latest
            docker_arch: linux/arm/v7
            nodejs_arch: armv7
          - docker_image: ubuntu:latest
            docker_arch: linux/arm64/v8
            nodejs_arch: arm64v8
    steps:
      - uses: actions/checkout@v4
        with:
          repository: unknownbrackets/maxcso
          ref: ${{ env.MAME_REF }}
      - uses: docker/setup-qemu-action@v3
      - run: |
          {
            echo "#!/usr/bin/env bash"
            echo "set -euo pipefail"

            echo "sudo apt-get update"
            echo "sudo apt-get install -y build-essential pkgconf zlib1g-dev liblz4-dev libuv1-dev"
            echo "make -j$(nproc)"

            echo "sudo apt-get install -y binutils"
            echo "ls -al maxcso"
            echo "strip maxcso"
            echo "ls -al maxcso"
          } > "build.sh"
          chmod +x build.sh
      - run: |
          docker run --rm \
            --platform "${DOCKER_ARCH}" \
            --volume "$(pwd):/build" \
            --workdir "/build" \
            "${DOCKER_IMAGE}"
            ./build.sh
        env:
          DOCKER_IMAGE: ${{ matrix.docker_image }}
          DOCKER_ARCH: ${{ matrix.docker_arch }}
      - name: Rename binary
        run: |
          dir="artifacts/bin/linux/${{ matrix.nodejs_arch }}"
          mkdir -p "${dir}"
          mv maxcso "${dir}/"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.nodejs_arch }}-${{ github.sha }}
          path: artifacts/**/maxcso
          if-no-files-found: error

  git-update:
    needs:
      - build-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
